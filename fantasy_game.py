# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'fantasy.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
abt={}
abl={}
aar={}
awk={}
sbt={}
sbl={}
sar={}
swk={}
txt=""
txt2=""
class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(610, 450)
        Form.setStyleSheet("background-color:rgb(210, 210, 210)")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.Team = QtWidgets.QLineEdit(Form)
        self.Team.setEnabled(False)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.Team.setFont(font)
        self.Team.setStyleSheet("background-color: rgb(234, 234, 234);")
        self.Team.setObjectName("Team")
        self.horizontalLayout.addWidget(self.Team)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.Match = QtWidgets.QLineEdit(Form)
        self.Match.setEnabled(False)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.Match.setFont(font)
        self.Match.setStyleSheet("background-color: rgb(234, 234, 234);")
        self.Match.setObjectName("Match")
        self.horizontalLayout.addWidget(self.Match)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem2)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.verticalLayout_4.addLayout(self.verticalLayout)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_3 = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_2.addWidget(self.label_3)
        self.PL = QtWidgets.QListWidget(Form)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.PL.setFont(font)
        self.PL.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.PL.setObjectName("PL")
        self.verticalLayout_2.addWidget(self.PL)
        self.horizontalLayout_3.addLayout(self.verticalLayout_2)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_4 = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_2.addWidget(self.label_4)
        self.label_5 = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color:rgb(0, 0, 255)")
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_2.addWidget(self.label_5)
        self.verticalLayout_3.addLayout(self.horizontalLayout_2)
        self.PT = QtWidgets.QListWidget(Form)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.PT.setFont(font)
        self.PT.setStyleSheet("background-color: rgb(255, 255, 255); color:rgb(0, 0, 255)")
        self.PT.setObjectName("PT")
        self.verticalLayout_3.addWidget(self.PT)
        self.horizontalLayout_3.addLayout(self.verticalLayout_3)
        self.verticalLayout_4.addLayout(self.horizontalLayout_3)
        self.Calculate = QtWidgets.QPushButton(Form)
        self.Calculate.setMaximumSize(QtCore.QSize(100, 16777215))
        self.Calculate.setAutoDefault(False)
        self.Calculate.setDefault(False)
        self.Calculate.setFlat(False)
        self.Calculate.setObjectName("Calculate")
        self.verticalLayout_4.addWidget(self.Calculate, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignBottom)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        global txt,txt2
        Form.setWindowTitle(_translate("Form", "Evaluate Team"))
        self.label.setText(_translate("Form", "Evaluate The Performance Of Your Fantasy Team"))
        self.label_2.setText(_translate("Form", "_________________________________________________"))
        self.label_3.setText(_translate("Form", "Players"))
        self.label_4.setText(_translate("Form", "Points"))
        self.label_5.setText(_translate("Form", "####"))
        self.Team.setText(_translate("Form", txt))
        self.Match.setText(_translate("Form", txt2))
        self.Calculate.setText(_translate("Form", "Calculate Score"))
        self.Calculate.clicked.connect(self.cal)
    def cal(self):
        ts=0
        db=sqlite3.connect("fantasy.db")
        cur=db.cursor()
        cur.execute("SELECT players FROM Teams where name=(?);",(txt,))
        result=cur.fetchone()
        C=0
        _translate = QtCore.QCoreApplication.translate
        for name in result[0].split(','):
            try:
                item = QtWidgets.QListWidgetItem()
                item2 = QtWidgets.QListWidgetItem()
            except:
                print("err1")
            try:
                self.PL.addItem(item)
                self.PT.addItem(item2)
            except:
                print("err2")
            try:
                item = self.PL.item(C)
                item2 = self.PT.item(C)
            except:
                print("err3")
            try:
                item.setText(_translate("MainWindow", name))
                score=str(self.score(name))
                if score=="0 (Did Not Played Match)":
                    ts=ts+0
                else:
                    ts=ts+float(score)
                item2.setText(_translate("MainWindow", score))
            except:
                print("err4")
            C=C+1
            self.label_5.setText(_translate("MainWindow", str(ts)))
            self.Calculate.setEnabled(False)
    def score(self,name):
        db=sqlite3.connect("fantasy.db")
        cur=db.cursor()
        cur.execute("SELECT * FROM Match where Match=(?) and player=(?);",(int(txt2[6]),name,))
        result=cur.fetchone()
##        print(result)
        if result is None:
            s="0 (Did Not Played Match)"
            S=str(s)
        else:
            s="100"
            R=[]
            for q in result[2::]:
                R.append(int(q))
            s=0
            if R[1]>0:
                s=s+R[0]/2
                if R[0]>=50:
                    s=s+5
                if R[0]>=100:
                    s=s+10
                if R[0]/R[1]*100 >=80 and R[0]/R[1]*100 <=100:
                    s=s+2
                if R[0]/R[1]*100 >100:
                    s=s+4
                s=s+R[2]
                s=s+(R[3]*2)
            if R[4]>0:
                s=s+(R[7]*10)
                if R[7]>=3:
                    s=s+5
                if R[7]>=5:
                    s=s+10
                ov=R[4]/6
                ec=R[6]/ov
                if ec>3.5 and ec<=4.5:
                    s=s+4
                elif ec>=2 and ec<=3.5:
                    s=s+7
                elif ec<2:
                    s=s+10
                else:
                    s=s+0
            s=s+(10*R[8])
            s=s+(10*R[9])
            s=s+(10*R[10])
##            print(s)
            S=str(s)
##            print(S)
        return S
        
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(840, 502)
        MainWindow.setStyleSheet("background-color:#fcfcfc")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setEnabled(True)
        self.frame.setStyleSheet("background-color:#e5e5e5")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_3 = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout.addWidget(self.label_3)
        self.BAT_CNT = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.BAT_CNT.setFont(font)
        self.BAT_CNT.setStyleSheet("color:blue")
        self.BAT_CNT.setObjectName("BAT_CNT")
        self.horizontalLayout.addWidget(self.BAT_CNT)
        self.label_7 = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout.addWidget(self.label_7)
        self.BOWL_CNT = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.BOWL_CNT.setFont(font)
        self.BOWL_CNT.setStyleSheet("color:blue")
        self.BOWL_CNT.setObjectName("BOWL_CNT")
        self.horizontalLayout.addWidget(self.BOWL_CNT)
        self.label_5 = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout.addWidget(self.label_5)
        self.AR_CNT = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.AR_CNT.setFont(font)
        self.AR_CNT.setStyleSheet("color:blue")
        self.AR_CNT.setObjectName("AR_CNT")
        self.horizontalLayout.addWidget(self.AR_CNT)
        self.label_8 = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout.addWidget(self.label_8)
        self.WK_CNT = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.WK_CNT.setFont(font)
        self.WK_CNT.setStyleSheet("color:blue")
        self.WK_CNT.setObjectName("WK_CNT")
        self.horizontalLayout.addWidget(self.WK_CNT)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.verticalLayout_4.addWidget(self.frame)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_11.setFont(font)
        self.label_11.setObjectName("label_11")
        self.horizontalLayout_3.addWidget(self.label_11)
        self.P_AVAIL = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.P_AVAIL.setFont(font)
        self.P_AVAIL.setStyleSheet("color:blue")
        self.P_AVAIL.setObjectName("P_AVAIL")
        self.horizontalLayout_3.addWidget(self.P_AVAIL)
        self.verticalLayout_2.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.BAT = QtWidgets.QRadioButton(self.centralwidget)
        self.BAT.setEnabled(False)
        self.BAT.setObjectName("BAT")
        self.horizontalLayout_2.addWidget(self.BAT)
        self.BOWL = QtWidgets.QRadioButton(self.centralwidget)
        self.BOWL.setEnabled(False)
        self.BOWL.setObjectName("BOWL")
        self.horizontalLayout_2.addWidget(self.BOWL)
        self.AR = QtWidgets.QRadioButton(self.centralwidget)
        self.AR.setEnabled(False)
        self.AR.setObjectName("AR")
        self.horizontalLayout_2.addWidget(self.AR)
        self.WK = QtWidgets.QRadioButton(self.centralwidget)
        self.WK.setEnabled(False)
        self.WK.setObjectName("WK")
        self.horizontalLayout_2.addWidget(self.WK)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.A_LIST = QtWidgets.QListWidget(self.centralwidget)
        self.A_LIST.setEnabled(False)
        self.A_LIST.setObjectName("A_LIST")
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.A_LIST.setFont(font)
        self.A_LIST.setStyleSheet("color:blue")
        self.verticalLayout_2.addWidget(self.A_LIST)
        self.horizontalLayout_6.addLayout(self.verticalLayout_2)
        self.label_14 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        self.horizontalLayout_6.addWidget(self.label_14)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.horizontalLayout_4.addWidget(self.label_13)
        self.P_USED = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.P_USED.setFont(font)
        self.P_USED.setStyleSheet("color:blue")
        self.P_USED.setObjectName("P_USED")
        self.horizontalLayout_4.addWidget(self.P_USED)
        self.verticalLayout_3.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_15 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.horizontalLayout_5.addWidget(self.label_15)
        self.T_NAME = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.T_NAME.setFont(font)
        self.T_NAME.setStyleSheet("c")
        self.T_NAME.setObjectName("T_NAME")
        self.horizontalLayout_5.addWidget(self.T_NAME)
        self.verticalLayout_3.addLayout(self.horizontalLayout_5)
        self.S_LIST = QtWidgets.QListWidget(self.centralwidget)
        self.S_LIST.setObjectName("S_LIST")
        font = QtGui.QFont()
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.S_LIST.setFont(font)
        self.S_LIST.setStyleSheet("color:blue")
        self.verticalLayout_3.addWidget(self.S_LIST)
        self.horizontalLayout_6.addLayout(self.verticalLayout_3)
        self.verticalLayout_4.addLayout(self.horizontalLayout_6)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 136, 24))
        self.menubar.setMaximumSize(QtCore.QSize(136, 16777215))
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.menubar.setFont(font)
        self.menubar.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.menubar.setStyleSheet("background-color:rgb(217, 217, 217)")
        self.menubar.setDefaultUp(False)
        self.menubar.setNativeMenuBar(True)
        self.menubar.setObjectName("menubar")
        self.menuManage_Teams = QtWidgets.QMenu(self.menubar)
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.menuManage_Teams.setFont(font)
        self.menuManage_Teams.setObjectName("menuManage_Teams")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionNew_Team = QtWidgets.QAction(MainWindow)
        self.actionNew_Team.setObjectName("actionNew_Team")
        self.actionOpen_Team = QtWidgets.QAction(MainWindow)
        self.actionOpen_Team.setObjectName("actionOpen_Team")
        self.actionSave_Team = QtWidgets.QAction(MainWindow)
        self.actionSave_Team.setObjectName("actionSave_Team")
        self.actionSave_Team.setEnabled(False)
        self.actionEvaluate_Team = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Arial Black")
        font.setBold(True)
        font.setWeight(75)
        self.actionEvaluate_Team.setFont(font)
        self.actionEvaluate_Team.setObjectName("actionEvaluate_Team")
        self.menuManage_Teams.addAction(self.actionNew_Team)
        self.menuManage_Teams.addAction(self.actionOpen_Team)
        self.menuManage_Teams.addAction(self.actionSave_Team)
        self.menuManage_Teams.addAction(self.actionEvaluate_Team)
        self.menubar.addAction(self.menuManage_Teams.menuAction())
        self.BAT.toggled.connect(self.display)
        self.BOWL.toggled.connect(self.display)
        self.AR.toggled.connect(self.display)
        self.WK.toggled.connect(self.display)
        self.A_LIST.itemDoubleClicked.connect(self.removelist1)
        self.S_LIST.itemDoubleClicked.connect(self.removelist2)
        self.actionNew_Team.triggered.connect(self.mssg)
        self.actionOpen_Team.triggered.connect(self.opn)
        self.actionSave_Team.triggered.connect(self.sav)
        self.actionEvaluate_Team.triggered.connect(self.evl)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Fantasy Cricket Game"))
        self.label.setText(_translate("MainWindow", "Your Selection"))
        self.label_3.setText(_translate("MainWindow", "Batsman(BAT)"))
        self.BAT_CNT.setText(_translate("MainWindow", "##"))
        self.label_7.setText(_translate("MainWindow", "Bowler(BOW)"))
        self.BOWL_CNT.setText(_translate("MainWindow", "##"))
        self.label_5.setText(_translate("MainWindow", "All ROunders(AR)"))
        self.AR_CNT.setText(_translate("MainWindow", "##"))
        self.label_8.setText(_translate("MainWindow", "Wicket-Keeper(WK)"))
        self.WK_CNT.setText(_translate("MainWindow", "##"))
        self.label_11.setText(_translate("MainWindow", "Points Available"))
        self.P_AVAIL.setText(_translate("MainWindow", "####"))
        self.BAT.setText(_translate("MainWindow", "BAT"))
        self.BOWL.setText(_translate("MainWindow", "BOWL"))
        self.AR.setText(_translate("MainWindow", "AR"))
        self.WK.setText(_translate("MainWindow", "WK"))
        self.label_14.setText(_translate("MainWindow", ">"))
        self.label_13.setText(_translate("MainWindow", "Points Used"))
        self.P_USED.setText(_translate("MainWindow", "####"))
        self.label_15.setText(_translate("MainWindow", "Team Name"))
        self.T_NAME.setText(_translate("MainWindow", "####"))
        self.menuManage_Teams.setTitle(_translate("MainWindow", "Manage Teams"))
        self.actionNew_Team.setText(_translate("MainWindow", "New Team"))
        self.actionOpen_Team.setText(_translate("MainWindow", "Open Team"))
        self.actionSave_Team.setText(_translate("MainWindow", "Save Team"))
        self.actionEvaluate_Team.setText(_translate("MainWindow", "Evaluate Team"))
        
    def mssg(self,MainWindow):
        _translate = QtCore.QCoreApplication.translate
        txt,self.ui=QtWidgets.QInputDialog.getText(QtWidgets.QInputDialog(),"Input Dialog","Enter Team Name:")
        if self.ui and txt!="":
            try:
                db=sqlite3.connect("fantasy.db")
            except:
                print("Err")
            cur=db.cursor()
            try:
                cur.execute("SELECT name from Teams where name=(?);",(str(txt),))
            except:
                print("Err2")
            try:
                result=cur.fetchone()
            except:
                print("Err3")
            try:
                if result is None:
                    self.actionSave_Team.setEnabled(True)
                    self.T_NAME.setText(_translate("MainWindow",str(txt)))
                    self.BAT.setEnabled(True)
                    self.BOWL.setEnabled(True)
                    self.AR.setEnabled(True)
                    self.WK.setEnabled(True)
                    self.A_LIST.setEnabled(True)
                    self.S_LIST.setEnabled(True)
                    self.P_AVAIL.setText(_translate("MainWindow","1000"))
                    self.P_USED.setText(_translate("MainWindow","0"))
                    self.BAT_CNT.setText(_translate("MainWindow","0"))
                    self.BOWL_CNT.setText(_translate("MainWindow","0"))
                    self.AR_CNT.setText(_translate("MainWindow","0"))
                    self.WK_CNT.setText(_translate("MainWindow","0"))
                    self.A_LIST.clear()
                    self.S_LIST.clear()
                    db=sqlite3.connect("fantasy.db")
                    cur=db.cursor()
                    try:
                        cur.execute("SELECT player from Stats where ctg=(?);",("BAT",))
                    except:
                        print("db err")
                    result=cur.fetchall()
                    abt.clear()
                    abl.clear()
                    aar.clear()
                    awk.clear()
                    sbt.clear()
                    sbl.clear()
                    sar.clear()
                    swk.clear()
                    for name in result:
                        abt[name[0]]="BAT"
                    cur.execute("SELECT player from Stats where ctg=(?);",("BWL",))
                    result=cur.fetchall()
                    for name in result:
                        abl[name[0]]="BWL"
                    cur.execute("SELECT player from Stats where ctg=(?);",("AR",))
                    result=cur.fetchall()
                    for name in result:
                        aar[name[0]]="AR"
                    cur.execute("SELECT player from Stats where ctg=(?);",("WK",))
                    result=cur.fetchall()
                    for name in result:
                        awk[name[0]]="WK"
##                    print(abt)
##                    print(abl)
##                    print(aar)
##                    print(awk)
                    db.close()
                else:
                    print("Name already taken")
            except:
                print("Err4")

    def display(self,MainWindow):
        b1=0
        b2=0
        b3=0
        b4=0
        if self.BAT.isChecked()==True:
            b1=1
            c="BAT"
            result=abt
        else:
            b1=0
        if self.BOWL.isChecked()==True:
            b2=1
            c="BWL"
            result=abl
        else:
            b2=0
        if self.AR.isChecked()==True:
            b3=1
            c="AR"
            result=aar
        else:
            b3=0
        if self.WK.isChecked()==True:
            b4=1
            c="WK"
            result=awk
        else:
            b4=0
        C=0
##        print("Result:",result)
        self.A_LIST.clear()
        _translate = QtCore.QCoreApplication.translate
        for name in result:
            try:
                item = QtWidgets.QListWidgetItem()
            except:
                print("err1")
            try:
                self.A_LIST.addItem(item)
            except:
                print("err2")
            try:
                item = self.A_LIST.item(C)
            except:
                print("err3")
            try:
                item.setText(_translate("MainWindow", name))
            except:
                print("err4")
            C=C+1
    def removelist1(self,item):
        _translate = QtCore.QCoreApplication.translate
        self.A_LIST.takeItem(self.A_LIST.row(item))
        self.S_LIST.addItem(item.text())
        db=sqlite3.connect("fantasy.db")
        cur=db.cursor()
        cur.execute("Select value,ctg from Stats where player=(?);",(str(item.text()),))
        result=cur.fetchall()
        self.P_AVAIL.setText(_translate("MainWindow",str(int(self.P_AVAIL.text())-int(result[0][0]))))
        self.P_USED.setText(_translate("MainWindow",str(int(self.P_USED.text())+int(result[0][0]))))
        if result[0][1]=="BAT":
            self.BAT_CNT.setText(_translate("MainWindow",str(int(self.BAT_CNT.text())+1)))
            abt.pop(item.text())
            sbt[item.text()]="BAT"
        elif result[0][1]=="BWL":
            self.BOWL_CNT.setText(_translate("MainWindow",str(int(self.BOWL_CNT.text())+1)))
            abl.pop(item.text())
            sbl[item.text()]="BWL"
        elif result[0][1]=="AR":
            self.AR_CNT.setText(_translate("MainWindow",str(int(self.AR_CNT.text())+1)))
            aar.pop(item.text())
            sar[item.text()]="AR"
        else:
            self.WK_CNT.setText(_translate("MainWindow",str(int(self.WK_CNT.text())+1)))
            awk.pop(item.text())
            swk[item.text()]="WK"
        if (int(self.WK_CNT.text())+int(self.AR_CNT.text())+int(self.BOWL_CNT.text())+int(self.BAT_CNT.text()))==11:
            self.A_LIST.setEnabled(False)
            self.A_LIST.clear()
            self.WK.setEnabled(False)
            self.AR.setEnabled(False)
            self.BOWL.setEnabled(False)
            self.BAT.setEnabled(False)
        if (int(self.WK_CNT.text()))==1 and self.WK.isEnabled()==True:
            self.WK.setEnabled(False)
            self.A_LIST.clear()
        if (int(self.AR_CNT.text()))==2 and self.AR.isEnabled()==True:
            self.AR.setEnabled(False)
            self.A_LIST.clear()
        if (int(self.BOWL_CNT.text()))==4 and self.BOWL.isEnabled()==True:
            self.BOWL.setEnabled(False)
            self.A_LIST.clear()
        if (int(self.BAT_CNT.text()))==4 and self.BAT.isEnabled()==True:
            self.BAT.setEnabled(False)
            self.A_LIST.clear()
##        print(sbt)
##        print(sbl)
##        print(sar)
##        print(swk)
        db.close()
            
    def removelist2(self, item):
        _translate = QtCore.QCoreApplication.translate
        self.S_LIST.takeItem(self.S_LIST.row(item))
        db=sqlite3.connect("fantasy.db")
        cur=db.cursor()
        try:
            cur.execute("Select value,ctg from Stats where player=(?);",(str(item.text()),))
        except:
            print("db err")
        result=cur.fetchall()
        self.P_AVAIL.setText(_translate("MainWindow",str(int(self.P_AVAIL.text())+int(result[0][0]))))
        self.P_USED.setText(_translate("MainWindow",str(int(self.P_USED.text())-int(result[0][0]))))
        if result[0][1]=="BAT":
            self.BAT_CNT.setText(_translate("MainWindow",str(int(self.BAT_CNT.text())-1)))
            try:
                sbt.pop(item.text())
            except:
                print("s err")
            try:
                abt[item.text()]="BAT"
            except:
                print("a err")
        elif result[0][1]=="BWL":
            self.BOWL_CNT.setText(_translate("MainWindow",str(int(self.BOWL_CNT.text())-1)))
            sbl.pop(item.text())
            abl[item.text()]="BWL"
        elif result[0][1]=="AR":
            self.AR_CNT.setText(_translate("MainWindow",str(int(self.AR_CNT.text())-1)))
            sar.pop(item.text())
            aar[item.text()]="AR"
        else:
            self.WK_CNT.setText(_translate("MainWindow",str(int(self.WK_CNT.text())-1)))
            swk.pop(item.text())
            awk[item.text()]="WK"
        if (int(self.WK_CNT.text())+int(self.AR_CNT.text())+int(self.BOWL_CNT.text())+int(self.BAT_CNT.text()))<11:
            self.A_LIST.setEnabled(True)
            if result[0][1]=="BAT":
                self.BAT.setChecked(True)
            elif result[0][1]=="BWL":
                self.BOWL.setChecked(True)
            elif result[0][1]=="AR":
                self.AR.setChecked(True)
            else:
                self.WK.setChecked(True)
##            self.A_LIST.addItem(item.text())
        if (int(self.WK_CNT.text()))<1:
            self.WK.setEnabled(True)
        if (int(self.AR_CNT.text()))<2:
            self.AR.setEnabled(True)
        if (int(self.BOWL_CNT.text()))<4:
            self.BOWL.setEnabled(True)
        if (int(self.BAT_CNT.text()))<4:
            self.BAT.setEnabled(True)
        db.close()

    def opn(self,MainWindow):
        _translate = QtCore.QCoreApplication.translate
        db=sqlite3.connect("fantasy.db")
        cur=db.cursor()
        cur.execute("SELECT name FROM Teams;")
        result=cur.fetchall()
        n=[]
        for name in result:
            n.append(name[0])
        N=tuple(n)
        txt,self.ui=QtWidgets.QInputDialog.getItem(QtWidgets.QInputDialog(),"Select Dialog","Select Team Name:",N,0,False)
        if self.ui:
            cur.execute("SELECT * FROM Teams WHERE name=(?);",(str(txt),))
            result=cur.fetchone()
            self.T_NAME.setText(_translate("MainWindow",str(result[0])))
            self.P_USED.setText(_translate("MainWindow",str(int(result[2]))))
            self.P_AVAIL.setText(_translate("MainWindow",str(1000-int(result[2]))))
            s=result[1].split(',')
##            print(s)
            C=0
            self.actionSave_Team.setEnabled(False)
            self.BAT.setEnabled(False)
            self.BOWL.setEnabled(False)
            self.AR.setEnabled(False)
            self.WK.setEnabled(False)
            self.A_LIST.setEnabled(False)
            self.S_LIST.setEnabled(False)
            self.A_LIST.clear()
            self.S_LIST.clear()
            for name in s:
                try:
                    item = QtWidgets.QListWidgetItem()
                except:
                    print("err1")
                try:
                    self.S_LIST.addItem(item)
                except:
                    print("err2")
                try:
                    item = self.S_LIST.item(C)
                except:
                    print("err3")
                try:
                    item.setText(_translate("MainWindow", name))
                except:
                    print("err4")
                C=C+1
        db.close()

    def sav(self,MainWindow):
        _translate = QtCore.QCoreApplication.translate
        db=sqlite3.connect("fantasy.db")
        cur=db.cursor()
        l={**sbt,**sbl,**sar,**swk}
        q=list(l.keys())
##        print(q)
        s=q[0]
        for i in q[1::]:
            s=s+','+str(i)
##        print(s)
        try:
            cur.execute("INSERT INTO Teams (name,players,value) VALUES (?,?,?);",(str(self.T_NAME.text()),str(s),float(self.P_USED.text())))
        except:
            print("error")
        db.commit()
        db.close()
        self.actionSave_Team.setEnabled(False)
        self.BAT.setEnabled(False)
        self.BOWL.setEnabled(False)
        self.AR.setEnabled(False)
        self.WK.setEnabled(False)
        self.A_LIST.setEnabled(False)
        self.S_LIST.setEnabled(False)
        self.A_LIST.clear()
        self.S_LIST.clear()
        self.label.setText(_translate("MainWindow", "Your Selection"))
        self.label_3.setText(_translate("MainWindow", "Batsman(BAT)"))
        self.BAT_CNT.setText(_translate("MainWindow", "##"))
        self.label_7.setText(_translate("MainWindow", "Bowler(BOW)"))
        self.BOWL_CNT.setText(_translate("MainWindow", "##"))
        self.label_5.setText(_translate("MainWindow", "All ROunders(AR)"))
        self.AR_CNT.setText(_translate("MainWindow", "##"))
        self.label_8.setText(_translate("MainWindow", "Wicket-Keeper(WK)"))
        self.WK_CNT.setText(_translate("MainWindow", "##"))
        self.label_11.setText(_translate("MainWindow", "Points Available"))
        self.P_AVAIL.setText(_translate("MainWindow", "####"))
        self.BAT.setText(_translate("MainWindow", "BAT"))
        self.BOWL.setText(_translate("MainWindow", "BOWL"))
        self.AR.setText(_translate("MainWindow", "AR"))
        self.WK.setText(_translate("MainWindow", "WK"))
        self.label_14.setText(_translate("MainWindow", ">"))
        self.label_13.setText(_translate("MainWindow", "Points Used"))
        self.P_USED.setText(_translate("MainWindow", "####"))
        self.label_15.setText(_translate("MainWindow", "Team Name"))
        self.T_NAME.setText(_translate("MainWindow", "####"))
        
    def evl(self,MainWindow):
        global txt
        _translate = QtCore.QCoreApplication.translate
        db=sqlite3.connect("fantasy.db")
        cur=db.cursor()
        cur.execute("SELECT name FROM Teams;")
        result=cur.fetchall()
        n=[]
        for name in result:
            n.append(name[0])
        N=tuple(n)
        txt,self.ui=QtWidgets.QInputDialog.getItem(QtWidgets.QInputDialog(),"Evaluate Dialog","Select Team Name:",N,0,False)
        if self.ui:
            self.evl2()
            
    def evl2(self):
        _translate = QtCore.QCoreApplication.translate
        db=sqlite3.connect("fantasy.db")
        cur=db.cursor()
        cur.execute("SELECT DISTINCT Match FROM Match;")
        result=cur.fetchall()
        n=[]
        for name in result:
            n.append("Match "+str(name[0]))
        N=tuple(n)
        global txt2,txt
        txt2,self.ui=QtWidgets.QInputDialog.getItem(QtWidgets.QInputDialog(),"Evaluate Dialog","Select Match:",N,0,False)
        if self.ui:
##            print(txt,txt2)
            self.window=QtWidgets.QWidget()
            self.ui=Ui_Form()
            self.ui.setupUi(self.window)
            self.window.show()
            
            

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
